###########
# BUILDER #
###########
FROM nginx:1.17-alpine as builder

# install dependencies
RUN apk update && \
    apk add --no-cache --virtual build-deps make \
    openssl-dev libffi-dev gcc python3-dev musl-dev \
    libpng freetype-dev netcat-openbsd g++


# set environment varibles
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# set working directory
WORKDIR /app

# install dependencies
RUN python3 -m ensurepip && \
    rm -r /usr/lib/python*/ensurepip && \
    pip3 install --upgrade pip setuptools && \
    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
    rm -r /root/.cache
COPY ./requirements.txt ./
RUN pip install wheel

# install dependencies
RUN pip install --upgrade pip
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /app/wheels -r requirements.txt


# add app
COPY . /app


#########
# FINAL #
#########

# pull official base image
FROM nginx:1.17-alpine

# set work directory
WORKDIR /app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV FLASK_ENV=production
ENV SVM_LOSS_CONF=production

WORKDIR /app

# install dependencies
RUN apk update && \
    apk add --no-cache --virtual build-deps make \
    openssl-dev libffi-dev gcc python3-dev musl-dev \
    libpng freetype-dev netcat-openbsd g++
RUN python3 -m ensurepip && \
    rm -r /usr/lib/python*/ensurepip && \
    pip3 install --upgrade pip setuptools && \
    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
    rm -r /root/.cache

# install dependencies
RUN pip install wheel
COPY --from=builder /app/wheels /wheels
COPY --from=builder /requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

COPY --from=client /app/build /usr/share/nginx/html
COPY ./nginx/default.conf /etc/nginx/conf.d/default.conf
COPY ./app/ ./app
COPY ./*.py ./

# add and run as non-root user
RUN adduser -D myuser
USER myuser

CMD gunicorn -b 0.0.0.0:5000 wsgi:app --daemon && \
      sed -i -e 's/$PORT/'"$PORT"'/g' /etc/nginx/conf.d/default.conf && \
      nginx -g 'daemon off;'